<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl"
>
    <xsl:output method="xml" indent="yes" />
    <xsl:strip-space elements="*"/>
  <xsl:variable name="nroles" select="document('..\control\mdtxroles.xml')/roles/*"/>
  <xsl:variable name="napps" select="document('..\control\applications.xml')/applications/*"/>
  <xsl:variable name="nappext" select="document('..\control\mdtxapps.xml')/applications/*"/>

  <xsl:template match ="/">
    <xsl:apply-templates/>
  </xsl:template>
  <xsl:template match="/ServerDescription">
    <ServerDescription autogenerated="yes">
      <xsl:for-each select ="roles/role">       
        <xsl:call-template name="getrolevars"/>
      </xsl:for-each>
      <xsl:for-each select ="applications/application">
        <xsl:call-template name="getappvars"/>
      </xsl:for-each>
      
      <xsl:comment> Rest of original file </xsl:comment>
      <xsl:apply-templates/>
    </ServerDescription>
    
  </xsl:template>
  <xsl:template match="roles">
    <roles autogenerated="yes">
      <xsl:for-each select ="role">
        <xsl:call-template  name="emitrole"/>
      </xsl:for-each> 
    </roles>
  </xsl:template>
  
  <xsl:template match="applications">
    <applications autogenerated="yes">
      <xsl:for-each select ="application">
      <xsl:call-template  name="emitapp"/>
      </xsl:for-each>
    </applications>
  </xsl:template>

  <xsl:template name ="getrolevars">
    <xsl:variable name ="c" select ="."/>
    <xsl:comment> expanding role: <xsl:value-of select ="$c"/> </xsl:comment>
    <xsl:copy-of select="$nroles[name=$c]/include/node()"/>
 <!--   <xsl:copy-of select="node()"/>  -->
  </xsl:template>
  
 <!-- <xsl:template match="role" mode="emitname">
    <xsl:variable name ="c" select ="@guid"/>
    <xsl:comment>
      role: <xsl:value-of select ="$c"/>
    </xsl:comment>
    <role autogenerated="yes">      
      <xsl:value-of select ="$nroles[@guid=$c]/name"/>
    </role>
  </xsl:template>-->

  <xsl:template name="emitrole">
    <xsl:variable name ="c" select ="."/>
    <xsl:comment>
      role copy for reference: <xsl:value-of select ="$c"/>
    </xsl:comment>
   <!-- <role autogenerated="yes"> -->
   <role>
      <xsl:value-of select ="$nroles[name=$c]/name"/>
    </role>
    <xsl:for-each select ="$nroles[name=$c]/Dependency">
      <xsl:call-template name ="emitrole"/>
      <!-- TO DO CHECK -->
      <xsl:call-template name ="getrolevars"/>
    </xsl:for-each>
  </xsl:template>

  
  <xsl:template name="emitapp">
    <!--<xsl:variable name ="c" select ="normalize-space(text())"/> -->
       <xsl:variable name ="c" select ="@guid"/>
    <xsl:comment>
      <xsl:value-of select ="$napps[@guid=$c]/Name"/>
    </xsl:comment>
  <!--  <application autogenerated="yes"> -->
  <application>
      <xsl:value-of select="$c"/>
    </application>
    <xsl:for-each select ="$napps[@guid=$c]/Dependency">
      <xsl:call-template name ="emitapp"/>
    </xsl:for-each>
    
   </xsl:template>
    
  <xsl:template name ="getappvars">
    <xsl:variable name ="c" select ="normalize-space(text())"/>
    <xsl:comment>
      application: <xsl:value-of select ="$c"/>
    </xsl:comment>
    <xsl:copy-of select="$nappext[@guid=$c]/include/node()"/>
    <xsl:copy-of select="./*"/>
    <xsl:for-each select ="$napps[@guid=$c]/Dependency">
      <xsl:call-template name ="getappvars"/>      
    </xsl:for-each>
  </xsl:template>
  
  <xsl:template match="@* | node()">
        <xsl:copy>
            <xsl:apply-templates select="@* | node()"/>
        </xsl:copy>
    </xsl:template>
</xsl:stylesheet>
